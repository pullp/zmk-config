// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define MAC 0
#define WIN 1
#define RIG 2
#define LEF 3
#define TRI 4

/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <RIG LEF>;
            then-layer = <TRI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W       &kp E        &kp R       &kp T         &kp Y      &kp U       &kp I        &kp O       &kp P
&kp A  &ht LALT S  &ht LCTRL D  &ht LGUI F  &kp G         &kp H      &ht RGUI J  &ht RCTRL K  &ht RALT L  &kp BSPC
&kp Z  &kp X       &kp C        &kp V       &kp B         &kp N      &kp M       &kp COMMA    &kp DOT     &kp ENTER
                                &lt 2 TAB   &kp LSHIFT    &kp SPACE  &lt 3 TAB
            >;
        };

        windows_layer {
            bindings = <
&kp Q  &kp W       &kp E       &kp R        &kp T         &kp Y      &kp U        &kp I       &kp O       &kp P
&kp A  &ht LALT S  &ht LGUI D  &ht LCTRL F  &kp G         &kp H      &ht RCTRL J  &ht RGUI K  &ht RALT L  &kp BSPC
&kp Z  &kp X       &kp C       &kp V        &kp B         &kp N      &kp M        &kp COMMA   &kp DOT     &kp ENTER
                               &lt 2 TAB    &kp LSHIFT    &kp SPACE  &lt 3 TAB
            >;
        };

        right_layer {
            bindings = <
&kp ESCAPE    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp CAPSLOCK       &kp N6          &kp HOME        &kp PAGE_UP   &kp END    &kp ESC
&kp DEL       &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PRINTSCREEN    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &kp DEL
&kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp INS            &trans          &kp HOME        &kp PG_DN     &kp PG_UP  &kp END
                                          &trans        &kp ESC            &trans          &trans
            >;
        };

        left_layer {
            bindings = <
&kp EXCL               &kp AT    &kp HASH  &kp DLLR           &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp GRAVE  &kp TILDE
&kp LEFT_PARENTHESIS   &kp LBKT  &kp LBRC  &kp DOUBLE_QUOTES  &trans       &kp FSLH   &kp MINUS  &kp EQUAL  &kp COLON  &kp SEMI
&kp RIGHT_PARENTHESIS  &kp RBKT  &kp RBRC  &kp SQT            &trans       &kp BSLH   &kp UNDER  &kp PLUS   &kp PIPE   &kp QMARK
                                           &trans             &trans       &trans     &trans
            >;
        };

        tri_layer {
            bindings = <
&kp F12  &kp F7  &kp F8  &kp F9  &bt BT_SEL 0    &bt BT_SEL 2  &out OUT_TOG   &tog WIN  &kp C_MUTE    &kp C_NEXT
&kp F11  &kp F4  &kp F5  &kp F6  &bt BT_SEL 1    &bt BT_SEL 3  &kp C_BRI_UP   &trans    &kp C_VOL_UP  &kp C_PP
&kp F10  &kp F1  &kp F2  &kp F3  &bt BT_CLR      &bt BT_SEL 4  &kp C_BRI_DEC  &trans    &kp C_VOL_DN  &kp C_PREV
                         &trans  &trans          &trans        &trans
            >;
        };
    };
};
